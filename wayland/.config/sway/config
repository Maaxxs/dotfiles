# update sway-ipc socket:
# just `pkill tmux` as this is a terminal multiplexer issue.
# also see https://wiki.archlinux.org/title/Sway#Sway_socket_not_detected
# OR:
# export SWAYSOCK=$(find /run/user/1000/ -name 'sway-ipc.1000.*.sock' -print -quit
#
# Logo key is Mod4. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Note: pass the final command to swaymsg so that the resulting window can be
# opened on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu 'rofi -show drun -modes drun,run'
set $locker swaylock -Kfc ff0000

### Output configuration
# mode: fill, stretch, fit, center, tile

# source: https://wall.alphacoders.com/big.php?i=866322
#output * bg ~/Pictures/wallpapers/forest-2560-x1440.png fill

# Use `wdisplays` to position the displays and get the offsets.
#output eDP-1 mode 1920x1080 pos 350,1440 bg ~/Pictures/wallpapers/forest-1920x1080.jpg fill
#output DP-4 mode 2560x1440 pos 0,0 bg ~/Pictures/wallpapers/forest-2560-x1440.png fill
#output DP-5 mode 2560x1440 pos 0,0 bg ~/Pictures/wallpapers/forest-2560-x1440.png fill
# output DP-5 mode 2560x1440 pos 2560,0 transform 90 bg ~/Pictures/wallpapers/forest-2560-x1440.png fit
# output DP-5 mode 2560x1440 pos 2560,0 transform 90 bg ~/Pictures/wallpapers/simple-creative.jpg fit

# frame
output eDP-1 scale 1.3

# horizontal
output eDP-1 mode 2256x1504 pos 2137,1440 bg ~/Pictures/wallpapers/forest-2256x1504.png fill
output "Dell Inc. DELL U2719DC CRKNTS2" mode 2560x1440 pos 1735,0 bg ~/Pictures/wallpapers/forest-2560-x1440.png fill

# vertical
# output eDP-1 mode 2256x1504 pos 3737,4000 bg ~/Pictures/wallpapers/forest-2256x1504.png fill
# output "Dell Inc. DELL U2719DC CRKNTS2" transform 90 pos 3872,1440


# Autostart applications
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec wl-paste -t text --watch clipman store --no-persist
exec --no-startup-id /usr/bin/dunst
# with transition period of 30 min (1800s)
exec --no-startup-id wlsunset -S 05:00 -s 19:00 -d 1800

### Idle configuration
exec swayidle -w \
         timeout 600 "$locker" \
         timeout 630 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
	 before-sleep "playerctl pause" \
         before-sleep "$locker"

# You can get the names of your inputs by running: swaymsg -t get_inputs
# show xkb_options with `xkbcli list`
input * {
    xkb_model pc105
    xkb_layout us,de
    xkb_variant ,nodeadkeys
    # make capslock an aditional escape
    # xkb_options grp:switch,caps:escape
    # map caps to ctrl
    xkb_options grp:switch,ctrl:nocaps
}

# diable mouse accerlation
input "type:pointer" {
    accel_profile flat
    #pointer_accel 0.4
}

input "type:touchpad" {
    natural_scroll enabled
    tap enabled
    # disable while typing
    dwt enabled
    pointer_accel 0.4
    accel_profile flat
}


### Key bindings
bindsym $mod+Return exec alacritty -e tmux
bindsym $mod+c exec rofi -show calc
bindsym $mod+Shift+c exec gnome-calculator
bindsym $mod+g exec thunar
bindsym $mod+n exec $HOME/.local/bin/next_empty_workspace.sh new
bindsym $mod+Shift+n exec $HOME/.local/bin/next_empty_workspace.sh move
bindsym $mod+ctrl+l output eDP-1 toggle
bindsym $mod+m exec env MOZ_ENABLE_WAYLAND=1 thunderbird
bindsym $mod+semicolon exec env MOZ_ENABLE_WAYLAND=1 firefox

bindsym $mod+Shift+q kill
bindsym $mod+d exec $menu
bindsym $mod+Shift+r reload
#bindsym $mod+d exec rofi -show run
# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal


# Moving around:

workspace_auto_back_and_forth yes

# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# Cycle workspace forward/backward
bindsym $mod+Shift+f workspace next_on_output
bindsym $mod+Shift+d workspace prev_on_output
bindsym $mod+grave workspace back_and_forth
bindsym $mod+Shift+grave move container to workspace back_and_forth

# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

# bind workspace 1-5 to primary monitor
# workspace 1 output DP-4
# workspace 2 output DP-4
# workspace 3 output DP-4
# workspace 4 output DP-4
# workspace 5 output DP-4

# Layout stuff:
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent

# Scratchpad:
# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# Resizing containers:

mode "resize" {
    bindsym $left resize shrink width 40px
    bindsym $up resize grow height 40px
    bindsym $down resize shrink height 40px
    bindsym $right resize grow width 40px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


# practical keybinding for special keys
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86Search exec pavucontrol
bindsym Print exec 'grim -g "$(slurp)" - | swappy -f -'
# setting key on framework
bindsym XF86AudioMedia              exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86RFKill                  exec notify-send test 230

# Lock, logout, suspend, hibernate, reboot, shutdown options
# suspend-then-hibernate default delay: 120min. specify in /etc/systemd/sleep.conf
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec $locker, mode "default"
    bindsym e exec swaymsg exit, mode "default"
    bindsym s exec systemctl suspend, mode "default"
    bindsym h exec systemctl hibernate, mode "default"
    bindsym r exec systemctl reboot, mode "default"
    bindsym Shift+s exec systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Shift+e mode "$mode_system"

gaps inner 3
default_border pixel 3

# Colors
# neo green: #19ff00
# set $dark_green #009a59
set $blue #33aadd
set $darker_blue #1177cc
set $dark_grey #111111
# class                 border  backgr. text    indicator child_border
client.focused          $blue $blue $dark_grey $darker_blue $blue
client.focused_inactive #5f676a #5f676a #eeeeee #484e50   #5f676a
# client.unfocused        #333333 #222222 #888888 #292d2e   #222222
# client.urgent           #2f343a #900000 #ffffff #900000   #900000
# client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c
# client.background       #ffffff


# swaymsg -t get_tree | jq -r '..|try select(.focused == true)'
for_window [app_id="^firefox$" title="^Pinboard - Save a Bookmark â€” Mozilla Firefox$"] floating enable
for_window [app_id="^org.gnome.Calculator$"] floating enable
for_window [app_id="^thunderbird$" title="^New Event:$"] floating enable
for_window [app_id="^blueman-manager$"] floating enable
for_window [app_id="^thunar$" title="^File Operation Progress$"] floating enable

bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %H:%M'; do sleep 1; done
    # status_command while ~/.config/sway/status.sh; do sleep 1; done
    # font pango:DejaVu Sans Mono 10
    swaybar_command waybar
    # swaybar_command swaybar
    # status_command i3status
    # font pango:Noto Sans Mono 10

    colors {
        statusline #ffffff
        background #323232
        # inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

include /etc/sway/config.d/*
# vi: ft=conf

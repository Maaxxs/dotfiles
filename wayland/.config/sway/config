# update sway-ipc socket:
# just `pkill tmux` as this is a terminal multiplexer issue.
# also see https://wiki.archlinux.org/title/Sway#Sway_socket_not_detected
# OR:
# export SWAYSOCK=$(find /run/user/1000/ -name 'sway-ipc.1000.*.sock' -print -quit
#
# Logo key -> Mod4 || Alt -> Mod1
set $mod Mod4
set $left h
set $down j
set $up k
set $right l
# Note: pass the final command to swaymsg so that the resulting window can be
# opened on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu rofi -show drun -modes drun,run | xargs swaymsg exec --
#set $locker swaylock -Kfc 16161D --show-failed-attempts
set $locker swaylock --hide-keyboard-layout --daemonize --image eDP-1:$HOME/Pictures/wallpaper/2256x1504/2256x1504-mountain.jpg --color 16161D --show-failed-attempts

font pango:Iosevka Bold 10

focus_follows_mouse always
## always move mouse to active container/window (also on same output)
## mouse_warping output|container|none  (default: output)
#mouse_warping container

### Output configuration
# mode: fill, stretch, fit, center, tile
# output * bg #030303 solid_color
#output eDP-1 scale 1 position 0 437
#output 'Dell Inc. DELL U2719DC CRKNTS2' position 1504 0
#output * bg ~/Pictures/wallpaper/firewatch.png fit
output * bg ~/Pictures/wallpaper/yosemite/el-capitan.jpg fit
output eDP-1 bg ~/Pictures/wallpaper/firewatch.png center
# make kanshi configuration take priority
exec_always kanshictl reload

# lid:on means laptop lid is closed.
bindswitch --locked lid:on output eDP-1 disable, exec kanshictl reload
bindswitch --locked lid:off output eDP-1 enable, exec kanshictl reload

bindgesture swipe:3:right workspace prev_on_output
bindgesture swipe:3:left workspace next_on_output

set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock
exec rm -f $WOBSOCK && mkfifo $WOBSOCK && tail -f $WOBSOCK | wob

# Autostart applications
exec_always --no-startup-id easyeffects --gapplication-service
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
# the following also stores your passwords on disk in that file
#exec wl-paste -t text --watch clipman store --no-persist
exec --no-startup-id /usr/bin/dunst
exec --no-startup-id /usr/bin/nextcloud --background
exec --no-startup-id /usr/bin/kanshi
# with transition period of 30 min (1800s)
exec --no-startup-id wlsunset -S 05:00 -s 17:00 -d 1800 2>&1 >~/.wlsunset.log
# Update number of upgradable packages
exec_always --no-startup-id checkupdates | wc -l > ~/.config/i3status/pkg_updates
exec --no-startup-id systemd-run --user --unit=pkg_updates --on-calendar=hourly /bin/sh -c 'checkupdates | wc -l > ~/.config/i3status/pkg_updates'
# run battery check every 5 minutes
exec --no-startup-id systemd-run --user --unit=low_battery --on-calendar='*-*-* *:00,05,10,15,20,25,30,35,40,45,50,55:00' ~/.local/bin/low_battery_warning.sh
# update scratchpad when (re)starting sway
exec_always /usr/bin/swaymsg -r -t get_tree | jq -r 'recurse(.nodes[]) | first(select(.name == "__i3_scratch") | .floating_nodes | length)' > ~/.config/i3status/scratchpad

# TODO remove. moved to user systemd file
# check mail every 15 min
#exec --no-startup-id systemd-run --user --unit=check-mail --on-calendar='*-*-* *:00,15,30,45:00' ~/.local/bin/mailsync.sh

### Idle configuration
exec swayidle -w \
         timeout 595 'notify-send "Going to lock in 5 seconds" "Screen will be locked in 5 seconds"' \
         timeout 600 "$locker" \
         timeout 630 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep "playerctl pause" \
         before-sleep "$locker" \

#          idlehint "10"

# You can get the names of your inputs by running: swaymsg -t get_inputs
# show xkb_options with `xkbcli list`
input * {
    xkb_model pc105
    xkb_layout us,de
    xkb_variant altgr-intl,
    xkb_options altwin:swap_lalt_lwin

    # xkb_layout us,de
    # xkb_variant ,nodeadkeys

    # make capslock an aditional escape
    # xkb_options grp:switch,caps:escape
    # map caps to ctrl
    #xkb_options grp:switch,ctrl:nocaps,altwin:swap_lalt_lwin

    # xkb_options grp:switch,altwin:swap_lalt_lwin
    repeat_delay 300
    repeat_rate 40
}

set $update_kb_layout_file swaymsg -t get_inputs | jq -r '.[] | select(.type=="keyboard") | .xkb_active_layout_name' | uniq | head -c2 | tr "[:lower:]" "[:upper:]" > $HOME/.config/i3status/keyboard

bindsym $mod+Backspace input "type:keyboard" xkb_switch_layout next; exec $update_kb_layout_file && $refresh_i3status && notify-send "Changed Keyboard Layout"

# diable mouse accerlation
input "type:pointer" {
    # accel_profile flat
    pointer_accel -0.5
}

input "type:touchpad" {
    natural_scroll enabled
    tap enabled
    # disable while typing
    dwt enabled
    # pointer_accel 1
    # accel_profile flat
    # scroll_factor 0.3
}


bindsym $mod+Shift+bracketright exec $HOME/.local/bin/sway-move-to.sh mid-right
bindsym $mod+Shift+bracketleft exec $HOME/.local/bin/sway-move-to.sh mid-left
### Key bindings
bindsym $mod+Return exec alacritty -e tmux
bindsym $mod+Shift+Return exec foot tmux
#bindsym $mod+c exec rofi -show calc
bindsym $mod+c exec gnome-calendar
bindsym $mod+i exec firefox-nightly
bindsym $mod+Shift+i exec firefox
bindsym $mod+Shift+c exec gnome-calculator
bindsym $mod+g exec EDITOR=nvim alacritty -e lf
bindsym $mod+Shift+g exec thunar
bindsym $mod+n exec $HOME/.local/bin/next_empty_workspace.sh new
bindsym $mod+Shift+n exec $HOME/.local/bin/next_empty_workspace.sh move
bindsym $mod+t exec $HOME/.local/bin/toggle_theme.sh
bindsym $mod+ctrl+n exec $HOME/.local/bin/toggle_notifications.sh
bindsym $mod+m exec $HOME/.local/bin/messenger.sh
bindsym $mod+semicolon exec env MOZ_ENABLE_WAYLAND=1 librewolf
bindsym $mod+Alt+d exec rofimoji --skin-tone neutral --clipboarder wl-copy --typer wtype
# bindsym $mod+f1 exec pactl set-sink-mute @DEFAULT_SINK@ toggle && notify-send "it sends"
# bindsym $mod+f2 exec notify-send "it sends"
bindsym $mod+p exec ~/.local/bin/fuzzy_open.sh pdf
bindsym $mod+u exec ~/.local/bin/fuzzy_open.sh uni
bindsym $mod+Shift+u exec ~/.local/bin/fuzzy_open.sh rfc
bindsym $mod+ctrl+k exec ~/.local/bin/kill_process.sh
bindsym $mod+q exec "~/.local/bin/translate.sh $(wl-paste --primary --type text)"
bindsym $mod+ctrl+m exec ~/.local/bin/monitor.sh

bindsym $mod+Shift+q kill
bindsym $mod+d exec $menu
bindsym $mod+Shift+r exec swaymsg reload && killall -SIGHUP kanshi
#bindsym $mod+d exec rofi -show run
# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# Cycle workspace forward/backward
bindsym $mod+Shift+f workspace next_on_output
bindsym $mod+Shift+d workspace prev_on_output
# grave is the backtick
bindsym $mod+grave workspace back_and_forth
bindsym $mod+Shift+grave move container to workspace back_and_forth

workspace_auto_back_and_forth yes
# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

# bind workspace 1-5 to primary monitor
# set $primary_mon "Dell Inc. DELL U2719DC CRKNTS2"
# workspace 1 output $primary_mon
# workspace 2 output $primary_mon
# workspace 3 output $primary_mon
# workspace 4 output $primary_mon
# workspace 5 output $primary_mon
# workspace 6 output $primary_mon
# workspace 7 output $primary_mon
# workspace 8 output eDP-1
# workspace 9 output eDP-1
# workspace 0 output eDP-1

# Layout stuff:
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen
#bindsym $mod+y exec alacritty --class mpv-term -e "/usr/bin/mpv" "$(wl-paste -n)" &, exec swaymsg '[app_id="mpv-term"] move scratchpad'

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle
bindsym $mod+Shift+w floating toggle
bindsym $mod+ctrl+d floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent

# Scratchpad:
# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus exec swaymsg move scratchpad && swaymsg -r -t get_tree | jq -r 'recurse(.nodes[]) | first(select(.name == "__i3_scratch") | .floating_nodes | length)' > ~/.config/i3status/scratchpad && $refresh_i3status

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
#bindsym $mod+minus scratchpad show
bindsym $mod+minus exec swaymsg scratchpad show && swaymsg -r -t get_tree | jq -r 'recurse(.nodes[]) | first(select(.name == "__i3_scratch") | .floating_nodes | length)' > ~/.config/i3status/scratchpad && $refresh_i3status
#bindsym $mod+u exec swaymsg scratchpad shw && notify-send "hello" "world"

# Resizing containers:
mode "resize" {
    bindsym $left resize shrink width 40px
    bindsym $up resize grow height 40px
    bindsym $down resize shrink height 40px
    bindsym $right resize grow width 40px
    bindsym Shift+$left resize shrink width 10px
    bindsym Shift+$up resize grow height 10px
    bindsym Shift+$down resize shrink height 10px
    bindsym Shift+$right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

set $refresh_i3status killall -SIGUSR1 i3status
set $get_volume pactl get-sink-volume @DEFAULT_SINK@ | head -n 1| awk '{print substr($5, 1, length($5)-1)}'
# practical keybinding for special keys
bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5% && $get_volume > $WOBSOCK
bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5% && $get_volume > $WOBSOCK
bindsym --locked XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle && ( [ "$(pactl get-sink-mute @DEFAULT_SINK@)" = "Mute: yes" ] && echo 0 > $WOBSOCK ) || $get_volume > $WOBSOCK

bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

bindsym XF86MonBrightnessDown exec brightnessctl set 5%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' | tee  $WOBSOCK > ~/.config/i3status/brightness && $refresh_i3status
bindsym XF86MonBrightnessUp exec brightnessctl set +5% | sed -En 's/.*\(([0-9]+)%\).*/\1/p' | tee $WOBSOCK > ~/.config/i3status/brightness && $refresh_i3status
bindsym $mod+bracketright exec $HOME/.local/bin/dell-brightness.sh increase
bindsym $mod+bracketleft exec $HOME/.local/bin/dell-brightness.sh decrease

bindsym --locked XF86AudioPlay exec playerctl play-pause
bindsym --locked XF86AudioNext exec playerctl next
bindsym --locked XF86AudioPrev exec playerctl previous
bindsym XF86Search exec pavucontrol

# screenshots
bindsym Print exec ~/.local/bin/screenshot.sh region
bindsym Shift+Print exec ~/.local/bin/screenshot.sh window
bindsym Ctrl+Print exec ~/.local/bin/screenshot.sh output
bindsym Ctrl+Shift+Print exec ~/.local/bin/screenshot.sh all

# grab color from screen to clipboard
bindsym $mod+Insert exec grim -g "$(slurp -p)" -t ppm - | convert - -format '%[pixel:p{0,0}]' txt:-

# setting key on framework. need an indicator for microphone mute status
bindsym XF86AudioMedia exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86RFKill exec ~/.local/bin/airplane.sh

# Lock, logout, suspend, hibernate, reboot, shutdown options
# suspend-then-hibernate default delay: 120min. specify in /etc/systemd/sleep.conf
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec $locker, mode "default"
    bindsym e exec swaymsg exit, mode "default"
    bindsym s exec $locker && systemctl suspend, mode "default"
    bindsym h exec systemctl hibernate, mode "default"
    bindsym r exec systemctl reboot, mode "default"
    bindsym Shift+s exec systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+e mode "$mode_system"

# Manual start applications
set $applications Firefox (f), mail (m), Thunderbird (t)
mode "$applications" {
    bindsym f exec env MOZ_ENABLE_WAYLAND=1 firefox, mode "default"
    bindsym t exec env MOZ_ENABLE_WAYLAND=1 thunderbird, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
#bindsym $mod+o mode "$applications"
bindsym $mod+o exec /usr/bin/io.github.alainm23.planify.quick-add
bindsym $mod+Shift+o exec /usr/bin/io.github.alainm23.planify

gaps inner 0
default_border pixel 3
smart_borders on

# Colors
# neo green: #19ff00
# set $dark_green #009a59

set $green1 #33FF00
set $green2 #00FF33
set $green_apple #33FF33
set $old_phosphor_black #282828

set $blue #33aadd
set $darker_blue #1177cc
set $dark_grey #111111
set $orange #ffa500
set $white #ffffff
set $black #000000
set $grey_jet #131516
set $grey_raven #373D3F

# class                 border  backgr. text    indicator child_border
#client.focused          $blue $blue $black $orange $blue
client.focused          $orange $orange $grey_raven $orange $blue
client.focused_inactive #5f676a #5f676a #eeeeee #484e50   #5f676a
# client.unfocused        #333333 #222222 #888888 #292d2e   #222222
# client.urgent           #2f343a #900000 #ffffff #900000   #900000
# client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c
# client.background       #ffffff


# swaymsg -t get_tree | jq -r '..|try select(.focused == true)'
for_window [window_type="dialog"] floating enable
for_window [window_role="dialog"] floating enable
#for_window [app_id="^firefox$" title="^Pinboard - Save a Bookmark — Mozilla Firefox$"] floating enable
for_window [app_id="^org.gnome.Calculator$"] floating enable
for_window [app_id="^thunderbird$" title="^New Task:$"] floating enable
for_window [app_id="^thunderbird$" title="^New Event:$"] floating enable
for_window [app_id="^thunderbird$" title="^Neuer Termin:$"] floating enable
for_window [app_id="^thunderbird$" title="^Edit Event:"] floating enable
for_window [app_id="^thunderbird$" title="^Termin bearbeiten:"] floating enable
# make thunderbird reminder windows look okay:
for_window [app_id="^thunderbird$" title="Erinnerung$"] floating enable, resize set 500 300, move position 1420 20

for_window [app_id="^blueman-manager$"] floating enable
for_window [app_id="^thunar$" title="^File Operation Progress$"] floating enable
# had the next 2 options turned on
#for_window [title="^linkding - add bookmark — .*$"] floating enable
#for_window [title="^linkding - add bookmark — .*$"] resize set 640 1300
# next two maybe activate
#for_window [title="^linkding - add bookmark — Mozilla Firefox$"] move position 1600 100
#for_window [title="^linkding - add bookmark — Mozilla Firefox$"] exec $HOME/.local/bin/sway-move-to.sh mid-right
for_window [app_id="^$" title="^$"] floating enable
for_window [app_id="^firefox$" title="^Save As$"] resize set 1000 800
for_window [title="^Picture-in-Picture$"] floating enable, resize set 900 600, exec $HOME/.local/bin/sway-move-to.sh bottom-right
# popups from the notification tray, e.g. signal, element
for_window [app_id="^$" title="^$"] exec $HOME/.local/bin/sway-move-to.sh top-right

# no idle signal when full screen
for_window [app_id="firefox"] inhibit_idle fullscreen


bar {
    position top
    # other bars:
    # * swaystatus: https://github.com/NobodyXu/swaystatus
    # * swayrbar: not sure exactly what this is. https://lib.rs/crates/swayrbar
    # * ironbar: (Rust): https://github.com/JakeStanger/ironbar (looks promising)

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    #status_command while date +'%Y-%m-%d %H:%M'; do sleep 1; done
    #status_command while ~/.config/sway/status.sh; do sleep 1; done
    # font pango:DejaVu Sans Mono 10
    # font pango: Fira Code 10
    # swaybar_command waybar
    # swaybar_command swaybar
    # swaybar_command ironbar
    status_command i3status
    separator_symbol ":|:"
    # font pango:Noto Sans Mono 10
    # font pango:Hermit 10
    #font pango:Cousine Nerd Font 10 # last used
    font pango:Iosevka Bold 11

    colors {
        statusline #ffffff
        #background #323232
        background #000000
        # inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

include /etc/sway/config.d/*
